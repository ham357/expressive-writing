.container
  %ul.collection
    %li.collection-item.avatar
      = check_user_icon(@post.user)
      %span.title
        = @post.user.nickname
    %li.collection-item.avatar
      .card-image
        = image_tag @post.image.url if @post.image.url.present?
      .card-content
        %h4.grey-text.text-darken-4
          = @post.title
        %span
          = @post.contents
      - if user_signed_in? && current_user.id == @post.user_id
        .action
          = link_to "編集する", edit_post_path(@post.id),data: {"turbolinks" => false}
          = link_to "削除する", post_path, method: :delete, data: { confirm: '削除いたします。よろしいですか?' } 
      - if @comments.present?
        %li.collection-item.avatar#comment-section
          - @comments.each do |comment|
            %ul.comment{"data-comment_id" => "#{comment.id}"}
              %li
                = check_user_icon(comment.user)
                %span.title
                  = comment.user.nickname
                  %br
                  = comment.comment
                - if user_signed_in? && current_user.id == comment.user_id
                  .action
                    = link_to "編集する", edit_post_comment_path(comment.id),data: {"turbolinks" => false}
                    = link_to "削除する","", class: "commnet-destroy"
    - if user_signed_in?
      %li.collection-item.avatar#comment-form-section
        = form_for @comment, url: post_comments_path(@post.id) do |f|
          .row
            .input-field
              = f.text_area :comment, class: "materialize-textarea textbox", :placeholder => "コメントを追加",'data-length': "250"
            %button.btn.waves-effect.waves-light#new_comment{:name => "action", :type => "submit"}
              = t('view.submit')
              %i.material-icons.right send
