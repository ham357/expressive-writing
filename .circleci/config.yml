version: 2
jobs:
  rubocop:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          DB_USERNAME: root
          DB_HOST: 127.0.0.1
      - image: mysql:5.7
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Rubocop
          command: bundle exec rubocop

  rspec:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          DB_USERNAME: root
          DB_HOST: 127.0.0.1
      - image: mysql:5.7
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: Rspec
          command: bundle exec rspec

  build:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          DB_USERNAME: root
          DB_HOST: 127.0.0.1
      - image: mysql:5.7
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: Rspec
          command: bundle exec rspec
      - run:
          name: run tests
          command: |
            DISABLE_SPRING=true bundle exec rails test
  build_image:
    docker:
      - image: docker:18.09.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws cli
          command: |
            apk add --no-cache --update py-pip
            pip install awscli
      - run:
          name: build image
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker build -t ${ECR_DOMAIN}/expressive-writing-image:$CIRCLE_SHA1 -t ${ECR_DOMAIN}/expressive-writing-image:latest --build-arg RAILS_MASTER_KEY=${RAILS_MASTER_KEY} --build-arg RAILS_ENV=production .
      - run:
          name: Push docker image
          command: |
            docker push ${ECR_DOMAIN}/expressive-writing-image:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN}/expressive-writing-image:latest
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - run:
          name: install aws cli
          command: |
            sudo pip install awscli
      - run:
          name: download jq
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            mv jq-linux64 jq
      - run:
          name: login
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: deploy
          command: |
            aws ecs describe-task-definition --task-definition rails-service2 | jq '.taskDefinition | { containerDefinitions: .containerDefinitions }' > definition.json
            aws ecs register-task-definition --family rails-service2 --cli-input-json file://definition.json
            aws ecs update-service --cluster expressive-writing-ecs-cluster --service rails-service2 --task-definition rails-service2
      - run:
          name: migration
          command: |
            aws ecs run-task --cluster expressive-writing-ecs-cluster --task-definition rails-migrate
workflows:
  version: 2
  test:
    jobs:
      - rubocop
      - rspec:
          requires:
            - rubocop
      - build
      - build_image:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build_image
          filters:
            branches:
              only: master
